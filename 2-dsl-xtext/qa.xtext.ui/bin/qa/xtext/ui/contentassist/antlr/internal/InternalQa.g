/*
* generated by Xtext
*/
grammar InternalQa;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package qa.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package qa.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import qa.xtext.services.QaGrammarAccess;

}

@parser::members {
 
 	private QaGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(QaGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleQATest
entryRuleQATest 
:
{ before(grammarAccess.getQATestRule()); }
	 ruleQATest
{ after(grammarAccess.getQATestRule()); } 
	 EOF 
;

// Rule QATest
ruleQATest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQATestAccess().getGroup()); }
(rule__QATest__Group__0)
{ after(grammarAccess.getQATestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQAContainerOptions
entryRuleQAContainerOptions 
:
{ before(grammarAccess.getQAContainerOptionsRule()); }
	 ruleQAContainerOptions
{ after(grammarAccess.getQAContainerOptionsRule()); } 
	 EOF 
;

// Rule QAContainerOptions
ruleQAContainerOptions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQAContainerOptionsAccess().getGroup()); }
(rule__QAContainerOptions__Group__0)
{ after(grammarAccess.getQAContainerOptionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__QATest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QATest__Group__0__Impl
	rule__QATest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QATest__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQATestAccess().getTitleKeyword_0()); }

	'Title: ' 

{ after(grammarAccess.getQATestAccess().getTitleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QATest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QATest__Group__1__Impl
	rule__QATest__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QATest__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQATestAccess().getTitleAssignment_1()); }
(rule__QATest__TitleAssignment_1)
{ after(grammarAccess.getQATestAccess().getTitleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QATest__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QATest__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QATest__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQATestAccess().getOptionsAssignment_2()); }
(rule__QATest__OptionsAssignment_2)?
{ after(grammarAccess.getQATestAccess().getOptionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QAContainerOptions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QAContainerOptions__Group__0__Impl
	rule__QAContainerOptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QAContainerOptions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQAContainerOptionsAccess().getTryKeyword_0()); }

	'try' 

{ after(grammarAccess.getQAContainerOptionsAccess().getTryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QAContainerOptions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QAContainerOptions__Group__1__Impl
	rule__QAContainerOptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QAContainerOptions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQAContainerOptionsAccess().getMaxTriesAssignment_1()); }
(rule__QAContainerOptions__MaxTriesAssignment_1)
{ after(grammarAccess.getQAContainerOptionsAccess().getMaxTriesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QAContainerOptions__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QAContainerOptions__Group__2__Impl
	rule__QAContainerOptions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QAContainerOptions__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQAContainerOptionsAccess().getTimesKeyword_2()); }

	'times' 

{ after(grammarAccess.getQAContainerOptionsAccess().getTimesKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QAContainerOptions__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QAContainerOptions__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QAContainerOptions__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQAContainerOptionsAccess().getGroup_3()); }
(rule__QAContainerOptions__Group_3__0)?
{ after(grammarAccess.getQAContainerOptionsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__QAContainerOptions__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QAContainerOptions__Group_3__0__Impl
	rule__QAContainerOptions__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QAContainerOptions__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQAContainerOptionsAccess().getRevealAnswerAssignment_3_0()); }
(rule__QAContainerOptions__RevealAnswerAssignment_3_0)
{ after(grammarAccess.getQAContainerOptionsAccess().getRevealAnswerAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QAContainerOptions__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QAContainerOptions__Group_3__1__Impl
	rule__QAContainerOptions__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QAContainerOptions__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQAContainerOptionsAccess().getCorrectKeyword_3_1()); }

	'correct' 

{ after(grammarAccess.getQAContainerOptionsAccess().getCorrectKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QAContainerOptions__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QAContainerOptions__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QAContainerOptions__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQAContainerOptionsAccess().getAnswerKeyword_3_2()); }

	'answer' 

{ after(grammarAccess.getQAContainerOptionsAccess().getAnswerKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__QATest__TitleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQATestAccess().getTitleEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getQATestAccess().getTitleEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QATest__OptionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQATestAccess().getOptionsQAContainerOptionsParserRuleCall_2_0()); }
	ruleQAContainerOptions{ after(grammarAccess.getQATestAccess().getOptionsQAContainerOptionsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QAContainerOptions__MaxTriesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQAContainerOptionsAccess().getMaxTriesINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getQAContainerOptionsAccess().getMaxTriesINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QAContainerOptions__RevealAnswerAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQAContainerOptionsAccess().getRevealAnswerRevealKeyword_3_0_0()); }
(
{ before(grammarAccess.getQAContainerOptionsAccess().getRevealAnswerRevealKeyword_3_0_0()); }

	'reveal' 

{ after(grammarAccess.getQAContainerOptionsAccess().getRevealAnswerRevealKeyword_3_0_0()); }
)

{ after(grammarAccess.getQAContainerOptionsAccess().getRevealAnswerRevealKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


