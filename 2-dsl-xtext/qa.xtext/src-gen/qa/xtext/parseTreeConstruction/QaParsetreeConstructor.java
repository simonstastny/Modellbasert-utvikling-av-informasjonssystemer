/*
* generated by Xtext
*/
package qa.xtext.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import qa.xtext.services.QaGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class QaParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private QaGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new QATest_Group(this, this, 0, inst);
			case 1: return new QAContainerOptions_Group(this, this, 1, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule QATest ****************
 *
 * //(parts += QAPart)*
 * QATest:
 * 	"Title: " title=EString options=QAContainerOptions?;
 *
 **/

// "Title: " title=EString options=QAContainerOptions?
protected class QATest_Group extends GroupToken {
	
	public QATest_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getQATestAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new QATest_OptionsAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new QATest_TitleAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getQATestRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Title: "
protected class QATest_TitleKeyword_0 extends KeywordToken  {
	
	public QATest_TitleKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getQATestAccess().getTitleKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// title=EString
protected class QATest_TitleAssignment_1 extends AssignmentToken  {
	
	public QATest_TitleAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getQATestAccess().getTitleAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new QATest_TitleKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("title",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("title");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getQATestAccess().getTitleEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getQATestAccess().getTitleEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// options=QAContainerOptions?
protected class QATest_OptionsAssignment_2 extends AssignmentToken  {
	
	public QATest_OptionsAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getQATestAccess().getOptionsAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new QAContainerOptions_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("options",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("options");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getQAContainerOptionsRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getQATestAccess().getOptionsQAContainerOptionsParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new QATest_TitleAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule QATest ****************/


/************ begin Rule QAContainerOptions ****************
 *
 * QAContainerOptions:
 * 	"try" maxTries=INT "times" (revealAnswer?="reveal" "correct" "answer")?;
 *
 **/

// "try" maxTries=INT "times" (revealAnswer?="reveal" "correct" "answer")?
protected class QAContainerOptions_Group extends GroupToken {
	
	public QAContainerOptions_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getQAContainerOptionsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new QAContainerOptions_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new QAContainerOptions_TimesKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getQAContainerOptionsRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "try"
protected class QAContainerOptions_TryKeyword_0 extends KeywordToken  {
	
	public QAContainerOptions_TryKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getQAContainerOptionsAccess().getTryKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// maxTries=INT
protected class QAContainerOptions_MaxTriesAssignment_1 extends AssignmentToken  {
	
	public QAContainerOptions_MaxTriesAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getQAContainerOptionsAccess().getMaxTriesAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new QAContainerOptions_TryKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("maxTries",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("maxTries");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getQAContainerOptionsAccess().getMaxTriesINTTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getQAContainerOptionsAccess().getMaxTriesINTTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "times"
protected class QAContainerOptions_TimesKeyword_2 extends KeywordToken  {
	
	public QAContainerOptions_TimesKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getQAContainerOptionsAccess().getTimesKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new QAContainerOptions_MaxTriesAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (revealAnswer?="reveal" "correct" "answer")?
protected class QAContainerOptions_Group_3 extends GroupToken {
	
	public QAContainerOptions_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getQAContainerOptionsAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new QAContainerOptions_AnswerKeyword_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// revealAnswer?="reveal"
protected class QAContainerOptions_RevealAnswerAssignment_3_0 extends AssignmentToken  {
	
	public QAContainerOptions_RevealAnswerAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getQAContainerOptionsAccess().getRevealAnswerAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new QAContainerOptions_TimesKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("revealAnswer",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("revealAnswer");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getQAContainerOptionsAccess().getRevealAnswerRevealKeyword_3_0_0();
			return obj;
		}
		return null;
	}

}

// "correct"
protected class QAContainerOptions_CorrectKeyword_3_1 extends KeywordToken  {
	
	public QAContainerOptions_CorrectKeyword_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getQAContainerOptionsAccess().getCorrectKeyword_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new QAContainerOptions_RevealAnswerAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "answer"
protected class QAContainerOptions_AnswerKeyword_3_2 extends KeywordToken  {
	
	public QAContainerOptions_AnswerKeyword_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getQAContainerOptionsAccess().getAnswerKeyword_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new QAContainerOptions_CorrectKeyword_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule QAContainerOptions ****************/




}
